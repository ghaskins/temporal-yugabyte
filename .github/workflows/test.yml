name: Build and Test

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

env:
    GOFLAGS: "-buildvcs=false"

jobs:
  build:
    runs-on: ubuntu-latest
    container: manetu/unified-builder:v3.0
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Compile
      run: make all

    - name: Bundle assets
      run: tar -cvf assets.tar target/ integration/core/target/ integration/clojure/target/uberjar/clojure-integration-test.jar

    - name: Upload assets
      uses: actions/upload-artifact@v4
      with:
        name: compiled-assets
        path: assets.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    container: ghcr.io/manetu/ci-tools:3.1
    permissions:
      contents: read
    services:
      yugabyte:
        image: yugabytedb/yugabyte:latest
      elasticsearch:
        image: elasticsearch:7.10.1
        env:
          # Make ES available both on _local_ and _site_,
          # and use _local_ for the publish_host.
          #
          # See here for details on network configuration:
          # https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
          network.host: _local_,_site_
          network.publish_host: _local_
          # Set storage limit to low number.
          cluster.routing.allocation.disk.threshold_enabled: true
          cluster.routing.allocation.disk.watermark.low: 512mb
          cluster.routing.allocation.disk.watermark.high: 256mb
          cluster.routing.allocation.disk.watermark.flood_stage: 128mb
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms100m -Xmx100m

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download assets
      uses: actions/download-artifact@v4
      with:
        name: compiled-assets
        path: assets

    - name: Unbundle assets
      run: tar -xvf assets/assets.tar

    - name: Run integration tests
      run: ./integrate.sh
